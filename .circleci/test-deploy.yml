version: 2.1
orbs:
  orb-tools: circleci/orb-tools@12.0
  aws-cli: circleci/aws-cli@4.0
  aws-ecr: {}
filters: &filters
  tags:
    only: /.*/
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
jobs:
  pre-integration-checkout-workspace-job:
    docker:
      - image: cimg/base:current
    resource_class: small
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: [sample/Dockerfile]
  tag-ecr-image:
    docker:
      - image: cimg/base:current
    parameters:
      repo:
        type: string
      source_tag:
        type: string
      target_tag:
        type: string
      region:
        type: string
      profile_name:
        type: string
      auth:
        type: steps
      skip_when_tags_exist:
        type: boolean
        default: false
    steps:
      - steps: <<parameters.auth>>
      - aws-ecr/ecr_login:
          profile_name: <<parameters.profile_name>>
          region: <<parameters.region>>
      - aws-ecr/tag_image:
          repo: <<parameters.repo>>
          skip_when_tags_exist: <<parameters.skip_when_tags_exist>>
          source_tag: <<parameters.source_tag>>
          target_tag: <<parameters.target_tag>>
  build-test-then-push-with-buildx:
    machine:
      image: ubuntu-2204:2022.07.1
    parameters:
      auth:
        type: steps
      attach_workspace:
        type: boolean
      workspace_root:
        type: string
      repo:
        type: string
      create_repo:
        type: boolean
      tag:
        type: string
      dockerfile:
        type: string
      path:
        type: string
      push_image:
        type: boolean
      platform:
        type: string
      region:
        type: string
    steps:
      - aws-ecr/build_and_push_image:
          auth: << parameters.auth >>
          attach_workspace: << parameters.attach_workspace >>
          workspace_root: << parameters.workspace_root >>
          repo: << parameters.repo >>
          create_repo: << parameters.create_repo >>
          tag: << parameters.tag >>
          dockerfile: << parameters.dockerfile >>
          path: << parameters.path >>
          platform: << parameters.platform >>
          push_image: << parameters.push_image >>
      - run:
          name: Tests for docker image
          command: |
            set -x
            docker image ls
            docker run 122211685980.dkr.ecr.us-west-2.amazonaws.com/<< parameters.repo >>:<< parameters.tag >> ping -V
            status=$?
            if [ "${status}" -ne 0 ]; then exit "${status}"; else exit 0; fi
            set +x
      - aws-ecr/push_image:
          repo: << parameters.repo >>
          region: << parameters.region >>
          tag: << parameters.tag >>
workflows:
  test-deploy:
    jobs:
      - orb-tools/lint:
          filters: *filters
      - orb-tools/pack:
          filters: *filters
      - orb-tools/review:
          filters: *release-filters
      - orb-tools/publish:
          #orb_name: circleci/aws-ecr
          orb_name: tibber/aws-ecr
          vcs_type: << pipeline.project.type >>
          pub_type: production
          enable_pr_comment: true
          requires: [ orb-tools/lint, orb-tools/review, orb-tools/pack ]
          #github_token: GHI_TOKEN
          #context: orb-publisher
          context: orb-publishing
          filters: *release-filters
executors:
  amd64:
    machine:
      image: ubuntu-2204:2022.07.1
      docker_layer_caching: true
  arm64:
    machine:
      image: ubuntu-2204:2022.07.1
      docker_layer_caching: true
    resource_class: arm.medium